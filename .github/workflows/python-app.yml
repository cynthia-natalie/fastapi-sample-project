# This workflow installs Python dependencies, runs tests, lints the codebase,
# performs static security analysis (Bandit, Semgrep), and sends email notifications.

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Clear pip cache and clean up
      run: |
        pip uninstall -y starlette fastapi || true
        pip cache purge

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest httpx pytest-cov tox ruff bandit nose requests semgrep==1.120.0
        pip install fastapi==0.115.8 starlette==0.45.3
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

    - name: Lint with ruff
      run: ruff check . --exit-zero

    - name: Run security analysis with Bandit
      run: |
        bandit -r app -f html -o bandit-report.html || true

    - name: Run security checks with Semgrep
      run: |
        semgrep --config p/ci --output semgrep-report.json app/ || true

    - name: Summarize Semgrep Results
      id: semgrep_summary
      run: |
        echo "findings=$(jq '.results | length' semgrep-report.json)" >> $GITHUB_ENV

    - name: Test with pytest (with coverage)
      run: |
        pytest tests --doctest-modules \
                     --junitxml=junit/test-results.xml \
                     --cov=app --cov-report=xml --cov-report=html

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

    - name: Upload test results (JUnit)
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: junit/test-results.xml

    - name: Upload Bandit report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-security-report
        path: bandit-report.html

    - name: Upload Semgrep report
      uses: actions/upload-artifact@v4
      with:
        name: semgrep-security-report
        path: semgrep-report.json

    - name: Run tox
      run: tox -e py

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Send email on workflow completion
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: GitHub Actions CI Result for ${{ github.repository }}
        to: cynthianatalie573@gmail.com
        from: GitHub Actions <cynthianatalie573@gmail.com>
        body: |
          CI Workflow Summary
          --------------------
        
          Status: ${{ needs.build.result }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Triggered by: ${{ github.actor }}
        
          Test Results:
          - All unit tests have been executed using Pytest.
          - Detailed test results are available: junit/test-results.xml
          - Coverage report generated: htmlcov/index.html
        
          Security Analysis:
          - Bandit static security scan completed: bandit-report.html
          - Semgrep static analysis completed: semgrep-report.json
        
          Reports:
          - Coverage Report: htmlcov/index.html
          - Test Results: junit/test-results.xml
          - Bandit Security Report: bandit-report.html
          - Semgrep Security Report: semgrep-report.json
        
          View the full CI run details:
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

