# This workflow installs Python dependencies, runs tests, and lints the codebase.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Clear pip cache and clean up
      run: |
        pip uninstall -y starlette fastapi
        pip cache purge

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest httpx
        pip install fastapi==0.110.0 starlette==0.36.3
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Check installed versions
      run: |
        pip show fastapi
        pip show starlette

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

    - name: Lint with flake8
      run: |
        # Stop the build if there are syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run FastAPI app in background
      run: |
        nohup python -m uvicorn app.main:app --host 127.0.0.1 --port 8000 --reload &
        sleep 3  # wait for server to be ready

    - name: Test with pytest
      run: |
        python -m pytest --maxfail=1 --disable-warnings -v
